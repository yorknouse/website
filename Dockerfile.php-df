FROM php:8.4-fpm-alpine AS app

# 1Ô∏è‚É£ Install dependencies & PHP extensions
RUN apk add --no-cache \
    bash \
    curl \
    git \
    nano \
    unzip \
    dos2unix \
    icu-dev \
    libpng-dev \
    libpng \
    libjpeg-turbo-dev \
    libjpeg \
    freetype-dev \
    libzip-dev \
    libzip \
    zip \
    oniguruma-dev \
    zlib-dev \
    libcurl \
    ca-certificates \
    busybox-suid \
    shadow \
    tzdata \
    cronie \
 && docker-php-ext-configure gd --with-freetype --with-jpeg --enable-gd \
 && docker-php-ext-install -j$(nproc) gd zip mbstring mysqli intl \
 && apk del --purge libpng-dev libzip-dev oniguruma-dev zlib-dev \
 && rm -rf /var/cache/apk/*

# 2Ô∏è‚É£ Copy PHP configuration
COPY docker/php.ini /usr/local/etc/php/php.ini

COPY docker/start-new-2.sh /var/www/start.sh

# 3Ô∏è‚É£ Copy Composer (after gd is installed!)
COPY --from=composer:latest /usr/bin/composer /usr/local/bin/composer

# 4Ô∏è‚É£ Cron setup
COPY docker/job-cron /etc/cron.d/job-cron
COPY docker/cron-minute.sh /var/www/cron-minute.sh
RUN chmod 0644 /etc/cron.d/job-cron /var/www/cron-minute.sh \
 && dos2unix /etc/cron.d/job-cron /var/www/cron-minute.sh \
 && crontab /etc/cron.d/job-cron \
 && touch /var/log/cron.log && chmod 0777 /var/log/cron.log

# 5Ô∏è‚É£ Working directory and composer deps
WORKDIR /var/www
COPY composer.json composer.lock ./

# Expose a configurable port (default to 9070)
ARG PORT=9070
ENV PORT=${PORT}

RUN sed -i 's|^listen = .*|listen = 0.0.0.0:${PORT}|' /usr/local/etc/php-fpm.d/www.conf

# üß© Composer install AFTER gd is available
RUN composer update
RUN composer install --no-interaction --no-scripts --no-autoloader

# 6Ô∏è‚É£ Copy app code
COPY . .

# 7Ô∏è‚É£ Optimize and permissions
RUN composer dump-autoload --optimize \
 && dos2unix /var/www/start.sh \
 && chown -R www-data:www-data /var/www /tmp \
 && git config --global --add safe.directory /var/www

CMD ["bash", "/var/www/start.sh"]