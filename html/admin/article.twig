{% extends "assets/template.twig" %}
{% block htmlIncludes %}
    {% if article.articles_type == 1  %}
        <!--Summernote-->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote.min.js"
                integrity="sha256-1XDZ8T0bWi65wnqq7bBPK9QrWkE0fg6xLVAVuSqKw/4=" crossorigin="anonymous"></script>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote.css"
              integrity="sha256-vHGOIPxeMV4uIsqGDzob0M6Zl8PY5+nJh7m0hJhJXfg=" crossorigin="anonymous"/>
        <script src="{{ CONFIG.ROOTBACKENDURL }}/assets\js\libs\summernote\summernote-image-captionit.js"></script>
    {% elseif article.articles_type == 6  %}
        <!--TuiEditor-->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tui-editor/1.4.10/tui-editor.min.css" integrity="sha512-+nHZBZFGJmRq9QyYL/lROrtz2+FGBcZ7LqPFcY1YrjwbseBOFMeBRSBj62odrEb4PSusWeY98ZjFoMMdptTckQ==" crossorigin="anonymous" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/tui-editor/1.4.10/tui-editor-contents.min.css" integrity="sha512-Kkjhkgw5Mb8Gy2adx3NQMYE76lFgoof9HZIR04/hFBnJwCrYEQ/FzDgmXfMaF42lND3X0tltPLumRV3slqn+9Q==" crossorigin="anonymous" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.59.2/codemirror.min.css" integrity="sha512-MWdvo/Qqcf4pY1ecQUB1uBn0qLp19U/qJ1Rpp2BDZeuBA7YsFEwkvqR/+aG4BroPiAYDunKJ6X8R/Pmdt3p7oA==" crossorigin="anonymous" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.3/styles/github.min.css" integrity="sha512-FwY1WVsm4UQgrOXt6kaQ53w83cOHa8fSvjFn/BvVOCYVPmkSR39k/xnU+8hht3zW6JL1TBd4C/aVQIAV58Cg6A==" crossorigin="anonymous" />
        <script src="https://cdnjs.cloudflare.com/ajax/libs/tui-editor/1.4.10/tui-editor-Editor-full.min.js" integrity="sha512-8Orlh5xln1WzQ/AoRmsYlhsb5WORMTopCb4wyIhZRQVSCgB0gAPDkHKRNJdxLI5E5yt3nkLQX/TyUKz82FzOJw==" crossorigin="anonymous"></script>
    {% endif %}


    <!--Date picker-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment-with-locales.min.js" integrity="sha256-VrmtNHAdGzjNsUNtWYG55xxE9xDTz4gF63x/prKXKH0=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js" integrity="sha256-5YmaxAwMjIpMrVlK84Y/+NjCpKnFYa8bWWBbUHSBGfU=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" integrity="sha256-yMjaV542P+q1RnH6XByCPDfUFhmOafWbeLPmqKh11zo=" crossorigin="anonymous" />

{% endblock %}
{% block content %}

<div class="row">
    <div class="col-md-4 col-sm-12">
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Article Details
                </h3>

                <div class="box-tools pull-right btn-group" role="group">
                    {% if 33|permissions and article.articles_showInAdmin == 1 %}
                        <button class="btn btn-sm btn-danger" id="deleteArticle"><i class="fa fa-trash-o"></i></button>
                    {% endif %}
                    {% if article.articles_showInSearch == 1 and date(article.articles_published) < date() %}
                    <a target="_blank" href="{{ CONFIG.ROOTFRONTENDURL }}/{{ article.articles_published|date("Y/m/d") }}/{{ article.articles_slug }}" class="btn btn-sm btn-default">View on site</a>
                    <a target="_blank" href="https://stats.nouse.co.uk/d/article/article-stats?var-articleid={{ article.articles_id }}&from={{ ((article.articles_published|date("U"))-7200)*1000 }}&to=now" class="btn btn-sm btn-default">Stats</a>
                    {% elseif article.articles_id != null %}
                        <a target="_blank" href="{{ CONFIG.ROOTFRONTENDURL }}/{{ article.articles_published|date("Y/m/d") }}/{{ article.articles_slug }}?preview&post={{ article.articles_id }}&key={{ article.articles_id|md5 }}" class="btn btn-sm btn-default">Preview on Site</a>
                    {% endif %}
                </div>

            </div>
            <div class="box-body">
                <div class="form-group">
                    <label>Headline</label>
                    <textarea id="headline" style="resize: none;" rows="2" placeholder="University of York to open campus on the Moon" class="form-control">{{ article.articlesDrafts_headline|raw }}</textarea>
                </div>
                <div class="form-group">
                    <label>Strapline</label>
                    <textarea id="excerpt" style="resize: none;" rows="4" placeholder="Use of straplines is advisable for display purposes" class="form-control">{{ article.articlesDrafts_excerpt|raw }}</textarea>
                </div>
                <div class="form-group">
                    <label>Publication date</label>
                    <input type='text' class="form-control" id="published" />
                    <p style="font-style: italic;">Articles with a status of "published" and a date in the future will be published upto two hours after the date and time selected due to cache constraints</p>
                </div>
                <div class="form-group">
                    <label>Status</label>
                    <select class="form-control" id="status">
                        <option value="1">Draft</option>
                        <option value="2" {{ article.articles_showInSearch == 1 and article.articles_showInLists == 0 ? 'selected' : '' }}>Display in search only</option>
                        <option value="3" {{ article.articles_showInLists == 1 and article.articles_showInSearch == 1 ? 'selected' : '' }}>Published</option>
                    </select>
                </div>
                <hr/>
                <div class="form-group">
                    <label>Edition</label>
                    <select class="form-control" id="edition">
                        <option value=""></option>
                        {% for edition in EDITIONS %}
                            <option  {{ (edition.editions_id == article.editions_id ? ' selected') }}   value="{{ edition.editions_id }}">{{ edition.editions_name ~ (edition.editions_printNumber != null ? ' (' ~ 'Number ' ~ edition.editions_printNumber ~ ')' : '' )}}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="form-group">
                    <label>Print Edition Page Number</label>
                    <input type="test" id="pagenumber" value="{{ article.articles_editionPage }}" class="form-control" />
                </div>
                <hr/>
                <div class="form-group">
                    <label>Section</label>
                    <select class="form-control" id="category1" multiple>
                        {% for category in CATEGORIES %}
                        <option {{ (category.categories_id in article.articles_categories ? 'selected') }}  value="{{ category.categories_id }}">{{ category.categories_displayName }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="form-group">
                    <label>Categories</label>
                    <select class="form-control" id="category2" multiple>
                        {% for category in CATEGORIES %}
                            {% if category.SUB|length > 0 %}
                                <optgroup label="{{ category.categories_displayName }}">
                                {% for category in category.SUB %}
                                    <option {{ (category.categories_id in article.articles_categories ? 'selected') }}  value="{{ category.categories_id }}">{{ category.categories_displayName }}</option>
                                {% endfor %}
                                </optgroup>
                            {% endif %}
                        {% endfor %}
                    </select>
                </div>
                <div class="form-group">
                    <label>Authors</label>
                    <select class="form-control" id="authors" multiple>
                        {% for user in USERS %}
                            <option {{ (user.users_userid in article.articles_authors ? 'selected') }} value="{{ user.users_userid }}">{{ user.users_name1 ~ " " ~ user.users_name2 }}</option>
                        {% endfor %}
                    </select>
                    <p style="font-style: italic;">For editorials or articles with no author please leave blank</p>
                </div>
                <div class="form-group">
                    <label>Style Settings</label>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="dropCap" {{ (article.articles_dropCapital == 1 ? 'checked':'') }}>
                        <label class="form-check-label">Drop Capital</label>
                    </div>
                </div>
                <hr/>
                <div class="form-group">
                    <label>Social Media Automation</label>
                    {% set articleSocialConfig = article['articles_socialConfig']|split(',') %}
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="postToFacebook" {{ (articleSocialConfig[1] == 1 ? 'disabled' : (article.articles_id == null ? 'checked' : (articleSocialConfig[0] != 1 ? '' : 'checked'))) }}>
                        <label class="form-check-label">{{ (articleSocialConfig[1] == 1 ? 'Posted' : 'Post') }} to Facebook</label>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="postToTwitter" {{ (articleSocialConfig[3] == 1 ? 'disabled' : (article.articles_id == null ? 'checked' : (articleSocialConfig[2] != 1 ? '' : 'checked'))) }}>
                        <label class="form-check-label">{{ (articleSocialConfig[3] == 1 ? 'Posted' : 'Post') }} to Twitter</label>
                    </div>
                    <textarea maxlength="280" id="socialexcerpt" {{ (articleSocialConfig[1] == 1 and articleSocialConfig[3] == 1 ? 'disabled' : '') }} style="resize: none;" rows="2" placeholder="Custom excerpt for social media display" class="form-control">{{ article.articles_socialExcerpt|raw }}</textarea>
                </div>
                <hr/>
                <div class="form-group">
                    <div class="form-check">
                        <input type="checkbox" id="displayImages" class="form-check-input" {{ article.articles_displayImages == 1 or article.articles_id == null ? 'checked':'' }}>
                        <label class="form-check-label">Display Images in the Article</label>
                        <p style="font-style: italic;">Uncheck this for articles where the legal basis for using the images is uncertain. <a href="https://nouse.co.uk/imageRemoval" target="_blank">Learn more</a></p>
                    </div>
                    <div class="form-check">
                        <input type="checkbox" id="isThumbnailPortrait" class="form-check-input" {{ article.articles_isThumbnailPortrait == 1 ? 'checked':'' }}>
                        <label class="form-check-label">Is the thumbnail image in portrait orientation?</label>
                        <p style="font-style: italic;">Leave this unchecked if the article has no thumbnail</p>
                    </div>
                </div>
                <hr/>
                <div class="form-group">
                    <label>Slug</label>
                    <textarea id="slug" disabled style="resize: none;" rows="2" class="form-control">{{ article.articles_slug }}</textarea>
                    <p style="font-style: italic;">Contact support@nouse.co.uk for a custom URL</p>
                </div>
            </div>
            <div class="overlay" id="loadingoverlay">
                <i class="fa fa-refresh fa-spin"></i>
            </div>
        </div>
        <script>
            function randomString(length) {
                var text = "";
                var possible = "abcdefghijklmnopqrstuvwxyz0123456789";

                for (var i = 0; i < length; i++)
                    text += possible.charAt(Math.floor(Math.random() * possible.length));

                return text;
            }
            var requestRunning = false;
            $(document).ready(function () {
                $('#published').datetimepicker({
                    date: "{{ (article.articles_published == null ? "now"|date("Y-m-d H:i:s") : article.articles_published) }}",
                    locale: "en-gb",
                    format: "D MMM YYYY h:mm:ss a"
                });
                $("#category1").select2({
                    theme: "bootstrap",
                    width: '100%'
                });
                $("#category2").select2({
                    theme: "bootstrap",
                    width: '100%'
                });
                $("#authors").select2({
                    theme: "bootstrap",
                    width: '100%'
                });
                $("#loadingoverlay").fadeOut();

                {% if article.articles_slug|length < 1 %}
                $("#headline").change(function() {
                    var slug = encodeURI(($("#headline").val().split(" ").join("-").replace(/[^a-zA-Z0-9-_\.]/g, '').toLowerCase()).split('.').join(""));
                    if (!requestRunning) {
                        requestRunning = true;
                        $.ajax({
                            url: "{{ CONFIG.ROOTBACKENDURL }}/api/article/slugTaken.php?slug=" + slug,
                            success: function (result) {
                                requestRunning = false;
                                if (result == '1') {
                                    $("#slug").val(slug);
                                } else {
                                    $("#slug").val(slug + "-" + randomString(5));
                                }
                            }
                        });
                    }
                });
                {% endif %}

                {% if 33|permissions %}
                $("#deleteArticle").click(function () {
                    bootbox.confirm({
                        message: "Are you sure you wish to delete this article?",
                        buttons: {
                            cancel: {
                                label: 'No',
                                className: 'btn-default'
                            },
                            confirm: {
                                label: 'Yes',
                                className: 'btn-danger'
                            }
                        },
                        callback: function (result) {
                            if (result) {
                                $.ajax({
                                    url: "{{ CONFIG.ROOTBACKENDURL }}/api/article/delete.php?articleid={{ article.articles_id }}",
                                    success: function (result) {
                                        if (result == '1') {
                                            bootbox.alert("Success - article has been deleted", function () {
                                                window.onbeforeunload = null; //Don't prompt to prevent them leaving if they've just deleted it
                                                window.location.href="{{ CONFIG.ROOTBACKENDURL }}";
                                            });
                                        } else {
                                            bootbox.alert("Sorry - Operation could not be completed! Please reload the page", function () {
                                                location.reload();
                                            });
                                        }
                                    }
                                });
                            }
                        }
                    });
                });
                {% endif %}
            });
        </script>

        {% if article.articles_type == 1 or article.articles_type == 6 %}
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Insert picture
                </h3>
                <div class="box-tools pull-right">
                </div>
            </div>
            <div class="box-body">
                {% embed 'common/plugins/uppy.twig' with {'publicBool': true, 'type': 'ARTICLE-IMAGE', 'paste': false, 'typeId': 2, 'subTypeId': (article.articles_id ?: '0'), 'imagesOnly': true } %}
                    {% block success %}
                        {% if article.articles_type == 1 %}
                        $('#editor').summernote('insertImage',"{{ CONFIG.ROOTFRONTENDURL }}/image/?f=" + responseJson.id + "&s=large&r=true", function ($image) {
                            $image.attr('data-fileid', responseJson.id);
                            $image.attr('alt', '');
                        });
                        {% elseif article.articles_type == 6 %}
                            var currentEditorContent = editor.getMarkdown();
                            if (currentEditorContent.length < 1) {
                                editor.setMarkdown("   ");
                            }
                            editor.setMarkdown(currentEditorContent + "\n\n" + '![' + responseJson.id + '](' + ("{{ CONFIG.ROOTFRONTENDURL }}/image/?f=" + responseJson.id + "&s=large&r=true").replace(/ /g, "%20") + ')', true)
                        {% endif %}
                    {% endblock %}
                {% endembed %}
            </div>
        </div>
        {% endif %}

        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Thumbnail
                </h3>
                <div class="box-tools pull-right">
                </div>
            </div>
            <div class="box-body no-padding">
                <img src="{% if article.articles_id %}
            {{ article.articles_id|articleThumbnail('large',true)|default('') }}
            {% else %}
            {{ "1"|s3URL }}{# Current default thumbnail - this also needs to be set a few lines below in the JS #}
            {% endif %}" alt="Thumbnail" id="thumbnailImage" style="width: 100%;" />
            </div>
            <div class="box-footer">
                <input id="thumbnailCredit" style="margin-bottom: 5px; display:none;" value="{{ article.articlesDrafts_thumbnailCredit|raw }}" class="form-control" placeholder="Image credit for caption" />
                {% embed 'common/plugins/uppy.twig' with {'publicBool': true, 'type': 'ARTICLE-THUMBNAIL', 'paste': false, 'typeId': 3, 'subTypeId': (article.articles_id ?: '0'), 'imagesOnly': true, 'fileLimit': 1 } %}
                    {% block success %}
                        $("#thumbnailImage").attr("src","{{ CONFIG.ROOTFRONTENDURL }}/image/?f=" + responseJson.id + "&s=large&r=true");
                        thumbnailid = responseJson.id;
                        $("#thumbnailCredit").show();
                    {% endblock %}
                {% endembed %}
                <p style="font-style: italic;">To display correctly, thumbnails should be wider they they are tall. Landscape images of around 2:1 aspect ratio work well</p>

                {% if article.articles_id and article.articles_thumbnail != 1 %}
                <script>
                    //Show the thumbnail credit box if it isn't the default one
                    $(document).ready(function () {
                       $("#thumbnailCredit").show();
                    });
                </script>
                {% endif %}
            </div>
        </div>
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Saved Versions
                </h3>
                <div class="box-tools pull-right">
                </div>
            </div>
            <div class="box-body no-padding">
                <table class="table">
                    {% for draft in article.drafts %}
                    <tr>
                        <td>v{{ draft.articlesDrafts_id }}</td>
                        <td>{{ draft.articlesDrafts_timestamp|date("G:i:s l j M Y") }}</td>
                        <td>{{ draft.articlesDrafts_changelog }}</td>
                        <td><a href="?a={{ draft.users_userid }}">{{ draft.users_name1 ~ ' ' ~ draft.users_name2 }}</a></td>
                    </tr>
                    {% endfor %}
                </table>
            </div>
        </div>
    </div>


    {% if article.articles_type == 1  %}
    <div class="col-md-8 col-sm-12">
        <div id="editor">{{ article.articlesDrafts_text|replace({"PS": "&pound;", "\n": "<br/>", "[ARCHIVECDNURL]":CONFIG.ARCHIVEFILESTOREURL})|raw }}</div>
        <script>
            $(document).ready(function () {
                $('#editor').summernote({
                    minHeight: 2000,             // set minimum height of editor
                    maxHeight: null,             // set maximum height of editor
                    focus: true,
                    disableDragAndDrop: true, //We're using uppy for that
                    placeholder: 'Your epic article goes here',
                    toolbar: [
                        ['lastSavedMessage', ['lastSave']],
                        ['oops', ['undo', 'redo']],
                        ['font', ['style', 'bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],
                        ['fontname', ['fontname']],
                        ['color', ['forecolor', 'backcolor']],
                        ['para', ['ul', 'ol', 'paragraph']],
                        ['table', ['table']],
                        ['insert', ['link', 'hr']],
                        ['nouseModules', ['sportScore', 'starRating']],
                        ['code', ['codeview']]
                    ],
                    buttons: {
                        /*
                        sportScore: function (context) {
                            var ui = $.summernote.ui;

                            // create button
                            var button = ui.button({
                                contents: '<i class="fa fa-futbol-o"/> Sports Score',
                                tooltip: 'Insert new sports result',
                                click: function () {
                                    // invoke insertText method with 'hello' on editor module.
                                    //context.invoke('editor.insertText', 'hello');
                                    bootbox.alert("Coming soon");
                                }
                            });

                            return button.render();   // return button as jquery object
                        },
                        starRating: function (context) {
                            var ui = $.summernote.ui;

                            // create button
                            var button = ui.button({
                                contents: '<i class="fa fa-star"/> Star Rating',
                                tooltip: 'Define the star rating for a review',
                                click: function () {
                                    bootbox.alert("Coming soon");
                                }
                            });

                            return button.render();   // return button as jquery object
                        },
                        */
                        lastSave: function (context) {
                            var ui = $.summernote.ui;

                            // create button
                            var button = ui.button({
                                className: '',
                                contents: '<span id="lastSavedMessage">Save</span>',
                                tooltip: "",
                                click: function () {
                                    saveArticle();
                                }
                            });
                            return button.render();   // return button as jquery object
                        }
                    },
                    popover: {
                        image: [
                            ['custom', ['captionIt']],
                            ['imagesize', ['imageSize100', 'imageSize50', 'imageSize25']],
                            ['float', ['floatLeft', 'floatRight', 'floatNone']],
                            ['remove', ['removeMedia']]
                        ],
                        link: [
                            ['link', ['linkDialogShow', 'unlink']]
                        ],
                    },
                    captionIt:{
                        icon: '<i class="fa fa-commenting-o"></i>',
                        figureClass:'',
                        figcaptionClass:'',
                        captionText:'Photo Credit: '
                    },
                    callbacks: {
                        onChange: function() {
                            window.onbeforeunload = function() {
                                return true;
                            };
                        }
                    }

                });
            });

        </script>
    </div>
    {% elseif article.articles_type == 6 %}
    <div class="col-md-8 col-sm-12">
        <!-- IMPORT Font Awesome 5 here-->
        <style>
            /* class for our button */
            .header-tui-button-class{
                float: left;
                box-sizing: border-box;
                outline: none;
                cursor: pointer;
                background-color: #fff;
                width: 22px;
                height: 22px;
                border-radius: 0;
                margin: 5px 3px;
                border: 1px solid #fff;
                display: flex;
                justify-content: center;
                align-items: center;
            }
        </style>
        <div id="editor"></div>
        <script>
            var content = '';
            {% for line in article.articlesDrafts_markdown|raw|split('\n') %}
               content += `{{ line|raw|replace({"`": "\\`"})|raw }}`;
               content += "\n";
            {% endfor %}
            var editor = new tui.Editor({
                el: document.querySelector('#editor'),
                initialEditType: 'wysiwyg',
                initialValue: content,
                previewStyle: 'vertical',
                language: "en_US",
                placeholder: "Today the university has announced a new lunar campus as part of its expansion programme which began with the development of Heslington East",
                toolbarItems: [
                    {
                        type: 'button',
                        options: {
                            $el: $('<div class="header-tui-button-class"><i class="fa fa-save"></i></div>'),
                            name: 'savebutton',
                            className: '',
                            event: "saveEvent",
                            tooltip: 'Save Article'
                        }
                    },
                    'heading',
                    'bold',
                    'italic',
                    'strike',
                    'divider',
                    'hr',
                    'quote',
                    'divider',
                    'ul',
                    'ol',
                    'task',
                    'indent',
                    'outdent',
                    'divider',
                    // 'table',
                    // 'image',
                    'link',
                    'divider',
                    //'code',
                    //'codeblock'
                ],
                hideModeSwitch: false,
                exts: [],
                height: '800px',
                usageStatistics: false,
                events: {
                    change: function() {
                        window.onbeforeunload = function() {
                            return true;
                        };
                    }
                },
            });
            editor.eventManager.addEventType('saveEvent');
            editor.eventManager.listen('saveEvent', function() {
                saveArticle();
            });
            editor.eventManager.listen('pasteBefore', function(event) {
                try {
                    var html = event.$clipboardContainer.html();
                    var doc = new DOMParser().parseFromString(html, 'text/html');
                    doc.querySelectorAll('span').forEach(function(el) {
                        el.outerHTML = el.textContent;
                    });
                    html = doc.body;
                    event.$clipboardContainer.html(html.outerHTML);
                }
                catch(err) {
                    //When in the markdown editor this doesn't work so put it in a try catch to allow stuff to be pasted into Markdown editor
                    return true;
                }
            });
        </script>
    </div>
    {% elseif article.articles_type == 2 %}
        <div class="col-md-8 col-sm-12">
            <div class="box box-default">
                <div class="box-header with-border">
                    <h3 class="box-title">
                        Gallery
                    </h3>
                    <div class="box-tools pull-right">
                        <button class="btn btn-box-tool btn-default saveArticleButton">Save</button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row" id="imagesList">
                        {% if article.galleryImages %}
                            {% for image in article.galleryImages %}
                                <div class="col-md-2" data-imageid="{{ image.data.s3files_id }}">
                                    <div class="box">
                                        <div class="box-header with-border">
                                            <div class="box-title">
                                                {{ image.data.s3files_id }}
                                            </div>
                                            <div class="box-tools pull-right">
                                                <button type="button" class="btn btn-box-tool deleteGalleryImage">
                                                    <i class="fa fa-times"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <div class="box-body">
                                            <img src="{{ image.url }}" style="width:100%;" class="galleryEditImage" />
                                        </div>
                                        <div class="box-footer">{{ image.data.s3files_meta_caption }}</div>
                                    </div>
                                </div>
                            {% endfor %}
                        {% endif %}
                    </div>
                </div>
                <div class="box-footer">
                    {% embed 'common/plugins/uppy.twig' with {'publicBool': true, 'type': 'ARTICLE-IMAGE', 'paste': false, 'typeId': 2, 'subTypeId': 2, 'imagesOnly': true } %}
                        {% block success %}
                            $("#imagesList").append('<div class="col-md-2" data-imageid="' + responseJson.id + '"><div class="box"><div class="box-header with-border"><h3 class="box-title">' + responseJson.id + '</h3><div class="box-tools pull-right"><button type="button" class="btn btn-box-tool deleteGalleryImage"><i class="fa fa-times"></i></button></div></div><div class="box-body"><img src="{{ CONFIG.ROOTFRONTENDURL }}/image/?f=' + responseJson.id + '&s=large&r=true" style="width:100%;"  class="galleryEditImage" /></div><div class="box-footer"></div></div></div>');
                        {% endblock %}
                    {% endembed %}
                    <script>
                        $(document).ready(function () {
                            $('body').on('click', '.deleteGalleryImage', function() {
                               $(this).parent().parent().parent().parent().hide();
                            });
                            $('body').on('click', '.galleryEditImage', function() {
                                var imageID = $(this).parent().parent().parent().data("imageid");
                                bootbox.prompt({
                                    title: "Image Caption",
                                    value: $(this).parent().parent().find("div.box-footer").text(),
                                    inputType: 'textarea',
                                    callback: function (result) {
                                        $("#imagesList").find("div[data-imageid='" + imageID + "']").find("div.box-footer").text(result);
                                    }
                                });

                            });
                        })
                    </script>
                </div>
            </div>
        </div>
    {% elseif article.articles_type == 4 %}
        {# LiveBlogPro #}
        <div class="col-md-8 col-sm-12">
            <div class="box box-default">
                <div class="box-header with-border">
                    <h3 class="box-title">
                        liveblogpro Checklist
                    </h3>
                </div>
                <div class="box-body">
                    <ul>
                        <li>Contact editor for login to liveblogpro</li>
                        <li>Click "start new liveblog" at <a href="https://www.liveblogpro.com/user/account">https://www.liveblogpro.com/user/account</a></li>
                        <li>Set all stream details including title and date</li>
                        <li><b>Copy "premium embed" with "display live title" unchecked into the box below</b></li>
                    </ul>
                </div>
            </div>
            <div class="box box-default">
                <div class="box-header with-border">
                    <h3 class="box-title">
                        Embed Data
                    </h3>
                </div>
                <div class="box-body no-padding">
                    <div class="form-group">
                       <textarea class="form-control" id="embeddata" style="resize: none; border:0;" rows="6"> {{ article.articlesDrafts_text|raw }}</textarea>
                    </div>
                </div>
                <div class="box-footer">
                    <button class="btn btn-default pull-right saveArticleButton">Save</button>
                </div>
            </div>
        </div>
    {% elseif article.articles_type == 5 %}
    <div class="col-md-8 col-sm-12">
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Print Edition Checklist
                </h3>
            </div>
            <div class="box-body">
                <ul>
                    <li>Generate a PDF with the entire edition as one file, with spreads split into two pages</li>
                    <li>Generate the cover as a JPEG and set it as the thumbnail for this article</li>
                    <li>Upload the pdf edition to the print edition archive directory for archival purposes</li>
                    <li><b>Upload the edition to the filestore enter the public shared link url below</b></li>
                </ul>
            </div>
            <div class="box-footer" style="font-style: italic;">
                <ul>
                    <li>The headline is normally in the format "26 January 2011"</li>
                    <li>No exceprt or author is set</li>
                    <li>Category is "Print Edition Archive"</li>
                </ul>
            </div>
        </div>
        <div class="box box-default">
            <div class="box-header with-border">
                <h3 class="box-title">
                    Print Edition Data
                </h3>
            </div>
            <div class="box-body">
                <div class="form-group">
                    <label>Embed URL</label>
                    <input type='text' class="form-control" id="embeddurl" value="{{ article.articlesDrafts_text|raw }}" placeholder="https://e.issuu.com/anonymous-embed.html?u=yorknouse&amp;d=idgoesherenormally" />
                    <p style="font-style: italic;">This is normally the bit after &lt;iframe src=" if you're using issuu or the link to the filestore</p>
                </div>
            </div>
            <div class="box-footer">
                <button class="btn btn-default pull-right saveArticleButton">Save</button>
            </div>
        </div>
    </div>
    {% endif %}


    <script>
        {% if article.articles_id %}
        var thumbnailid = null; //Used to store a new thumbnail if one is set
        {% else %}
        var thumbnailid = 1; //Current default thumbnail
        {% endif %}

        function saveArticle(skipThumnailPrompt, skipThumbnailCaptionPrompt, skipThumbnailCreditTypePrompt) {
            //Check prompts
            if ((thumbnailid == 1 || (thumbnailid == null && "{{ article.articles_thumbnail }}" == "1")) && !skipThumnailPrompt) {
                //This is the default thumbnail so warn them of that and make sure they know what they're doing
                bootbox.confirm({
                    message: "You haven't set a thumbnail for this article yet - are you sure you want to save it?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-danger'
                        },
                        cancel: {
                            label: 'Cancel',
                            className: 'btn-default'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            saveArticle(true, false, false);
                        }
                    }
                });
                return false;
            }
            if (!skipThumbnailCaptionPrompt && $("#thumbnailCredit").val().length < 1 && thumbnailid != 1 && (thumbnailid != null || "{{ article.articles_thumbnail }}" != "1")) {
                bootbox.confirm({
                    message: "You haven't set a credit for the thumbnail for this article yet. <br/><br/>Please confirm that no credit is required - if you are unsure please consult a senior editor",
                    buttons: {
                        confirm: {
                            label: 'No credit required',
                            className: 'btn-danger'
                        },
                        cancel: {
                            label: 'Cancel',
                            className: 'btn-default'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            saveArticle(true, true, false);
                        }
                    }
                });
                return false;
            }

            if (!skipThumbnailCreditTypePrompt && thumbnailid != 1 && (thumbnailid != null || "{{ article.articles_thumbnail }}" != "1")) {
                {% if article.articles_type != 6 %}
                bootbox.confirm({
                    message: "Because this article is not a conventional text based article you must credit the thumbnail you have used somewhere in your article (if credit is required) as a credit will not be automatically displayed using the text entered in the credit field<br/><br/>Please confirm that you have done this - if you are unsure please consult a senior editor",
                    buttons: {
                        confirm: {
                            label: 'Thumbnail credited in body of article',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'Cancel',
                            className: 'btn-default'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            saveArticle(true, true, true);
                        }
                    }
                });
                return false;
                {% endif %}
            }

            var savingDialog = bootbox.dialog({
                message: '<p class="text-center">Saving and publishing your changes</p>',
                closeButton: false
            });

            {% if article.articles_type == 2 %}
            var galleryArray = [];
            var captionArray = [];
            $('#imagesList').children('div').each(function () {
                if ($(this).is(":visible")) {
                    galleryArray.push($(this).data("imageid"));
                    captionArray.push($(this).find("div.box-footer").text());

                }
            });
            {% endif %}

            if ($("#headline").val().length < 1) {
                bootbox.alert("Please specify a headline");
                savingDialog.modal('hide');
                return false;
            } else if ($("#slug").val().length < 1) {
                bootbox.alert("Please try again after a slug has been generated");
                savingDialog.modal('hide');
                return false;
            }

            $.ajax({
                url: "{{ CONFIG.ROOTBACKENDURL }}/api/article/editArticle.php",
                type: 'POST',
                dataType: "json",
                data: {
                    {% if article.articles_type == 1  %}
                    "text": $('#editor').summernote('code'),
                    {% elseif article.articles_type == 2 %}
                    "text": galleryArray.join(","),
                    "captions": captionArray.join(","),
                    {% elseif article.articles_type == 4 %}
                    "text": $("#embeddata").val(),
                    {% elseif article.articles_type == 5 %}
                    "text": $("#embeddurl").val(),
                    {% elseif article.articles_type == 6 %}
                    "markdown": editor.getMarkdown(),
                    "text": editor.getHtml(),
                    {% endif %}
                    "headline": $("#headline").val(),
                    "excerpt": $("#excerpt").val(),
                    "categories":($("#category1").val() || []).join(",") + "," + ($("#category2").val() || []).join(","),
                    "authors":($("#authors").val() || []).join(","),
                    "published":$("#published").val(),
                    "edition":$("#edition").val(),
                    "pagenumber":$("#pagenumber").val(),
                    "status":$("#status").val(),
                    "slug":$("#slug").val(),
                    "thumbnail": thumbnailid,
                    {% if article.articles_id != null %}
                    "articleid": "{{ article.articles_id }}",
                    {% endif %}
                    "type": "{{ article.articles_type }}", {#It's a new one so set the type#}
                    "postToTwitter": ($("#postToTwitter").is(':checked') ? 1 : 0),
                    "postToFacebook": ($("#postToFacebook").is(':checked') ? 1 : 0),
                    "displayImages": ($("#displayImages").is(':checked') ? 1 : 0),
                    "isThumbnailPortrait": ($("#isThumbnailPortrait").is(':checked') ? 1 : 0),
                    "socialexcerpt": $("#socialexcerpt").val(),
                    "thumbCredit": $("#thumbnailCredit").val(),
                    "dropCap": ($("#dropCap").is(':checked') ? 1 : 0),}
                },
                success: function (result) {
                    savingDialog.modal('hide');
                    if (result.result) {
                        window.onbeforeunload = null; //Let them leave a page without a warning after they save
                        {% if article.articles_id == null %}
                        window.location.href = "?id=" + result.response.articleid;
                        {% else %}

                        $('.note-status-output').html(
                            '<div class="alert alert-success">' +
                            'Saved' +
                            '</div>'
                        );
                        {% endif %}
                    } else {
                        console.log(result);
                        bootbox.alert("Sorry - there was a problem saving your changes. Please check your internet connection and try again");
                    }
                },
                error: function () {
                    savingDialog.modal('hide');
                    bootbox.alert("Sorry - there was a problem saving your changes. Please check your internet connection and try again");
                }
            });
        }

        $(document).ready(function () {
            $(".saveArticleButton").click(function () {
                saveArticle()
            });
        });
    </script>
    {% endblock %}
