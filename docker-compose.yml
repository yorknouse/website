services:
  caddy:
    image: caddy:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy:/data
      - php_app_data:/var/www/html/admin
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./ssl/ssl.key:/etc/ssl/private/ssl.key
      - ./ssl/ssl.crt:/etc/ssl/certs/ssl.crt
      - ./ssl/origin-pull-ca.pem:/etc/ssl/certs/origin-pull-ca.pem
    environment:
      ACME_AGREE: 'true'
    env_file:
      - nouseprod.env
    depends_on:
      - php-container
      - astro-container
      - react-container
      - phpmyadmin
      - grafana
  db:
    image: mysql/mysql-server:8.0
    command: --default-authentication-plugin=mysql_native_password --innodb-thread-concurrency=0 --sort_buffer_size=512K --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    container_name: db
    volumes:
      - db_data:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
      - ./docker/mysql/mysql.conf:/etc/mysql/my.cnf
      - ./docker/mysql/readonly.sql:/docker-entrypoint-initdb.d/readonly.sql
    restart: always
    environment:
      - MYSQL_DATABASE=nouse
      - MYSQL_ROOT_HOST=%
      - MYSQL_USER=userDocker
      - MYSQL_PASSWORD=passDocker
      - MYSQL_ROOT_PASSWORD=rootPass
    env_file:
      - nouseprod.env
    ports:
      - 3306:3306
  php-container:
    build:
      context: .
      dockerfile: Dockerfile.php-df
    container_name: php-container
    restart: always
    depends_on:
      - db
    environment:
      - MYSQL_HOSTNAME=db
      - MYSQL_DATABASE=nouse
      - MYSQL_USER=userDocker
      - MYSQL_PASSWORD=passDocker
    expose:
      - 9000
    env_file:
      - nouseprod.env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - php_app_data:/var/www/html/admin
  react-container:
    build:
      context: .
      dockerfile: Dockerfile.react-df
    container_name: react-container
    restart: always
    depends_on:
      - db
    env_file:
      - nouseprod.env
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mysql://userDocker:passDocker@db:3306/nouse
  astro-container:
    build:
      context: .
      dockerfile: Dockerfile.astro-df
      args:
        - PUBLIC_API_BASE_URL=http://react-container:3000
        - PUBLIC_BASE_URL=https://nouse.co.uk
    container_name: astro-container
    restart: always
    depends_on:
      - react-container
    env_file:
      - nouseprod.env
    ports:
      - "4321:4321"
    environment:
      - NODE_ENV=production
      - PUBLIC_API_BASE_URL=http://react-container:3000
      - PUBLIC_BASE_URL=https://nouse.co.uk
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2
    container_name: phpmyadmin
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - PMA_ARBITRARY=1
      - PMA_USER=userDocker
      - PMA_PASSWORD=passDocker
    restart: always
    depends_on:
      - db
    volumes:
      - /sessions
  compressor:
    image: ghcr.io/yorknouse/image-compressor:latest
    restart: unless-stopped
    depends_on:
      - db
    environment:
      - MYSQL_HOSTNAME=db
      - MYSQL_DATABASE=nouse
      - MYSQL_USER=userDocker
      - MYSQL_PASSWORD=passDocker
      - SLEEP_TIME=60
    env_file:
      - nouseprod.env
  mysql-backup:
     image: databack/mysql-backup:latest
     restart: unless-stopped
     container_name: mysql-backup
     environment:
       - DB_SERVER=db
       - DB_PORT=3306
       - DB_USER=root
       - DB_PASS=rootPass
       - DB_NAMES=nouse
       - DB_DUMP_FREQ=120 #2 hours
       - DB_DUMP_BEGIN=+10
       - COMPRESSION=gzip
       - NICE=true
     env_file:
       - nouseprod.env
     depends_on:
       - db
     volumes:
       - /etc/localtime:/etc/localtime:ro
  grafana:
    image: grafana/grafana:8.5.27-ubuntu
    container_name: grafana
    restart: unless-stopped
    volumes:
      - ./docker/grafana/config:/etc/grafana
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - db
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,cloudflare-app
      - GF_INSTANCE_NAME=Nouse
  netdata:
    hostname: yusunouse01.york.ac.uk
    image: netdata/netdata
    container_name: netdata
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    environment:
      - PGID=120 #This varies from server to server (https://learn.netdata.cloud/docs/agent/packaging/docker) - find it with      grep docker /etc/group | cut -d ':' -f 3
    depends_on: #Relies on everything because it needs to start last in order to access details of docker containers
      - caddy
      - php-container
      - db
      - phpmyadmin
      - mysql-backup
      - compressor
    volumes:
      - ./docker/netdata/config:/etc/netdata:ro
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    environment:
      - WATCHTOWER_NO_STARTUP_MESSAGE=true
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=30
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
volumes:
  netdatalib:
  netdatacache:
  caddy:
  php_app_data:
  db_data: { }
