---
import ArticleRows from "@components/ArticleRows.astro";
import CustomBoxes from "@components/SolidJS/CustomBoxes";
import type { FeaturedHighlights } from "@components/types";
import {
  articlesWithArticleDrafts,
  getArticles,
} from "@components/utils/articles";
import { s3URL } from "@components/utils/s3URL";
import type { editions } from "@prisma/client";
import Layout from "src/layouts/Layout.astro";
import prisma from "src/prisma";
import { v4 as uuidv4 } from "uuid";
import crypto from "crypto";

const { slug } = Astro.params;

const cleanSlug = decodeURIComponent(slug || "");

const preview = Astro.url.searchParams.get("preview") != null;
const previewEditionId = Astro.url.searchParams.get("edition");
const previewEditionHash = Astro.url.searchParams.get("key");
const isPreview = preview && previewEditionId && previewEditionHash;

const edition = await prisma.editions.findFirst({
  where: {
    editions_slug: cleanSlug,
    editions_show: isPreview ? false : true,
    editions_deleted: false,
    NOT: {
      editions_thumbnail: null,
    },
  },
  orderBy: {
    editions_published: "desc",
  },
});

if (!edition) return Astro.redirect("/404");
if (isPreview) {
  const expectedHash = crypto
    .createHash("md5")
    .update(edition.editions_id.toString())
    .digest("hex");
  if (expectedHash !== previewEditionHash) return Astro.redirect("/404");
}

const isWebEdition = edition.editions_type === "Web Edition";
let pdfURL;
// Data for web editions is saved as a JSON string in the database
// This is parsed into an object here
let featuredHighlights: FeaturedHighlights = null;
if (isWebEdition && edition.editions_featuredHighlights) {
  featuredHighlights = JSON.parse(edition.editions_featuredHighlights);
  if (featuredHighlights) {
    for (const section of featuredHighlights.sections) {
      if (section.articles.length !== 0) {
        const articleIds = section.articles.map((n) => Number.parseInt(n));
        section.articlesData = await getArticles(articleIds);
      }
      // If there is a custom box header, add it to the start of the custom boxes array
      if (section.customBoxHeader.title) {
        section.customBoxes.splice(0, 0, section.customBoxHeader);
      }
    }
  }
} else {
  pdfURL = edition.editions_pdf
    ? await s3URL(edition.editions_pdf)
    : await s3URL(edition.editions_pdfOriginal!);
}
---

<Layout
  title={`${
    edition.editions_printNumber
      ? `№${edition.editions_printNumber}`
      : edition.editions_name
  } - Nouse`}
  active={undefined}
  style="nouse"
>
  <div class="px-[3%] pt-8 sm:px-[0.5%] 2xl:px-[13%]">
    <h1 class="text-center text-xl md:text-2xl lg:text-4xl">
      {
        edition.editions_printNumber
          ? `№${edition.editions_printNumber}`
          : edition.editions_name
      }
    </h1>
    {
      (isWebEdition ||
        edition.editions_printNumber ||
        new Date(edition.editions_name).toString() === "Invalid Date") && (
        <h4 class="text-center text-lg md:text-xl">{`Published on ${edition.editions_published.toLocaleString(
          "en-gb",
          { day: "numeric", month: "long", year: "numeric" }
        )}`}</h4>
      )
    }
  </div>
  {
    isWebEdition && featuredHighlights ? (
      async () => {
        return (
          <div class="mt-8">
            <img
              id="thumbnail"
              class="mb-5 w-full px-[3%] sm:px-[0.5%] 2xl:px-[13%]"
              src={await s3URL(edition.editions_thumbnail!, "medium")}
            />
            {featuredHighlights!.sections.map(async (section) => {
              return (
                <div class="section mb-8">
                  {section.headerImage && (
                    <img
                      class="section-image mb-5 w-full px-[3%] sm:px-[0.5%] 2xl:px-[13%]"
                      src={await s3URL(section.headerImage, "medium")}
                    />
                  )}
                  {section.customBoxes.length !== 0 &&
                    (() => {
                      const id = uuidv4();
                      return (
                        <div class="custom-boxes-container relative mb-5 flex w-full flex-col bg-black px-[3%] pt-4 text-white sm:px-[0.5%] 2xl:px-[13%]">
                          <p class="border-b border-white text-center text-xl md:text-2xl lg:text-4xl">
                            From Our Editors
                          </p>
                          <CustomBoxes
                            client:idle
                            id={id}
                            customBoxes={section.customBoxes}
                          >
                            {section.customBoxes.map((customBox, index) => {
                              return (
                                <div
                                  id={`${id}-${index}`}
                                  class={`custom-box flex flex-col items-center justify-start overflow-hidden bg-neutral-900 transition-opacity delay-300 duration-500 ${
                                    index == 0
                                      ? "w-full p-4 opacity-100 md:w-10/12"
                                      : "h-0 w-0 p-0 opacity-0"
                                  }`}
                                >
                                  <p class="text-center text-lg underline md:text-xl lg:text-2xl">
                                    {customBox.title}
                                  </p>
                                  <p class="text-center text-xs xl:text-sm 2xl:text-base">
                                    {customBox.text}
                                  </p>
                                </div>
                              );
                            })}
                          </CustomBoxes>
                        </div>
                      );
                    })}
                  {section.articles.length !== 0 && (
                    <div class="px-[3%] sm:px-[0.5%] 2xl:px-[13%]">
                      <ArticleRows
                        articles={section.articlesData}
                        style={section.name}
                      />
                    </div>
                  )}
                </div>
              );
            })}
          </div>
        );
      }
    ) : (
      <>
        <div class="mx-auto w-1/2 pt-8">
          <iframe src={pdfURL} width="100%" height="1170" />
          <p class="mt-4 text-center text-lg md:text-xl">
            If you're unable to view the PDF file,
            <a href={pdfURL}>click here.</a>
          </p>
        </div>
      </>
    )
  }
</Layout>
