---
import Article from "./Article.astro";
import { getArticles } from "./utils/articles";
import { getCategoryLink } from "./utils/categories";
import type {IArticleFull, ICategory, ICategoryArticles} from "./types";

export interface Props {
  category: ICategoryArticles | ICategory;
  style: "nouse" | "muse";
}
const { category, style } = Astro.props;

let articles: IArticleFull[] = [];
if ('articles' in category) {
    if (category.articles) {
        articles = category.articles.map((article) => article);
    } else {
        console.error("No articles found for category");
    }
} else {
    articles = await getArticles(style,
        category.categories_featured?.split(",").map(Number)
    );
}

const categoryColor = category.categories_backgroundColor;
---

<style define:vars={{ categoryColor }}>
  .border-color {
    border-color: var(--categoryColor);
  }
  .category-color {
    color: var(--categoryColor);
  }
</style>
{
  articles.length != 0 && (
    <>
      <div class="border-color mt-4 h-full border-t-2">
        <a
          id="category-text"
          class="arno-display category-color text-2xl uppercase xl:text-3xl 2xl:text-4xl"
          href={`${
            category.categories_nestUnder == 4
              ? `/muse/`
              : '/'
          }${category.categories_name}`}
        >
          {category.categories_displayName}
        </a>
        {/* Desktop */}
        <div class="hidden max-w-full flex-row justify-center gap-2.5 md:flex">
          {articles.map(async (article, index) => {
              return (
                      <div
                              class={`w-full pr-2.5 ${
                                  index != articles.length - 1 ? "border-r border-gray-300" : ""
                              }`}
                      >
                          <Article
                                  headline={
                                      article.headline?.length != 0
                                          ? String(article.headline)
                                          : "Unknown"
                                  }
                                  excerpt={
                                      article.excerpt?.length != 0
                                          ? article.excerpt
                                          : "Unknown"
                                  }
                                  authors={article.authors}
                                  category={category.categories_displayName}
                                  categoryLink={getCategoryLink(
                                      category.categories_name,
                                      category.categories_nestUnder
                                  )}
                                  categoryColor={categoryColor}
                                  imageUrl={article.thumbnailURL}
                                  articleUrl={article.articleURL}
                                  isVertical={true}
                                  isPortrait={article.isThumbnailPortrait}
                                  hideCategoryAccent={true}
                          />
                      </div>
              )
          })}
        </div>
        {/* Mobile */}
        {
          <div class="block max-w-full justify-center md:hidden">
            {articles.map(async (article, index) => (
              <div
                class={`w-full p-2.5 ${
                  index != articles.length - 1 ? "border-b border-gray-300" : ""
                }`}
              >
                <Article
                  headline={
                    article.headline?.length != 0
                      ? String(article.headline)
                      : "Unknown"
                  }
                  excerpt={
                    article.excerpt?.length != 0
                      ? article.excerpt
                      : "Unknown"
                  }
                  authors={article.authors}
                  category={category.categories_displayName}
                  categoryLink={getCategoryLink(
                    category.categories_name,
                    category.categories_nestUnder
                  )}
                  categoryColor={categoryColor}
                  imageUrl={article.thumbnailURL}
                  articleUrl={article.articleURL}
                  isVertical={false}
                  isPortrait={article.isThumbnailPortrait}
                  hideCategoryAccent={true}
                />
              </div>
            ))}
          </div>
        }
      </div>
    </>
  )
}
