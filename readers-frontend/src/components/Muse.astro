---
import MuseComponent from "@solidComponents/MuseComponent";
import { getMenuCategories } from "./utils/categories";
import {
  articlesWithArticleDrafts,
  getArticles,
} from "./utils/articles";
import type { MuseNavbarCategory } from "./types";
import Article from "./Article.astro";
import dateFormatter from "./utils/dateFormatter";
import prisma from "../prisma";

type articlesWithArticlesDraftAndLink = articlesWithArticleDrafts & {
  imageUrl: string;
};

const museMenuCategories = (await getMenuCategories("muse")).filter(
  (category) => category.categories_name !== "nouse"
);

const categories = museMenuCategories.reduce((accumulator, currentCategory) => {
  accumulator.push({
    name: currentCategory.categories_name,
    displayName: currentCategory.categories_displayName
      ? currentCategory.categories_displayName
      : "",
  });

  return accumulator;
}, [] as MuseNavbarCategory[]);

const articles = new Map<string, articlesWithArticlesDraftAndLink[]>();

// 1. Extract all article IDs from all categories
const allFeaturedArticleIds = museMenuCategories
    .flatMap(c => c.categories_featured?.split(',').map(Number) ?? []);

// 2. Get all articles at once
const allArticles = await getArticles(allFeaturedArticleIds);

// 3. Get all S3 files at once
const neededFileIds = allArticles
    .map(a => Number(a.articles_thumbnail))
    .filter(id => !isNaN(id));
const s3files = await prisma.s3files.findMany({
  where: { s3files_id: { in: neededFileIds } },
});
const s3FileMap = new Map(s3files.map(f => [f.s3files_id, f]));

// 4. Build article-to-image mapping
const getImageUrl = (article: articlesWithArticleDrafts) => {
  const s3File = s3FileMap.get(Number(article.articles_thumbnail))
  if (s3File === undefined) {
    return ""
  }

  let fileUrl = `${s3File.s3files_cdn_endpoint}/${
      s3File.s3files_path
  }/${encodeURIComponent(s3File.s3files_filename)}`;

  fileUrl += `_large`;

  fileUrl += `.${s3File.s3files_extension}`;

  return fileUrl
};

// 5. Organize by category
for (const category of museMenuCategories) {
  const featuredIds = category.categories_featured?.split(',').map(Number) ?? [];
  const categoryArticles = allArticles
      .filter(a => featuredIds.includes(a.articles_id))
      .slice(0, 4)
      .map(a => ({
        ...a,
        imageUrl: getImageUrl(a),
      }));

  articles.set(category.categories_name, categoryArticles);
}
---

<div class="relative mt-4 flex w-full flex-col bg-black" id="muse-banner">
  <a href="/muse" class="flex w-full flex-row">
    <img
      class="mx-auto my-4 w-[27%] md:w-[14%]"
      src="https://bbcdn.nouse.co.uk/file/nouseSiteAssets/logo/MUSE%20Logo%20White%20small.png"
      alt="Nouse MUSE logo"
    />
  </a>

  <MuseComponent client:idle categories={categories}>
    {
      museMenuCategories.map((category, i) => (
        <>
          {/* Desktop */}
          <div
            class={`${
              i === 0 ? "my-4 h-min opacity-100" : "h-0 opacity-0"
            } hidden w-full flex-row px-[0.5%] transition-opacity delay-100 duration-700 md:flex 2xl:px-[13%]`}
            id={`muse_${category.categories_name}`}
          >
            {articles.get(category.categories_name)?.map((article, i) => (
              <div
                class={`mr-3 flex w-1/4 flex-row ${
                  i !== articles.get(category.categories_name)!.length - 1 &&
                  "border-r border-white"
                }`}
              >
                <div class="pr-3">
                  <Article
                    headline={
                      article.articlesDrafts.length != 0
                        ? article.articlesDrafts[0].articlesDrafts_headline
                        : "Unknown"
                    }
                    excerpt={
                      article.articlesDrafts.length != 0
                        ? article.articlesDrafts[0].articlesDrafts_excerpt
                        : "Unknown"
                    }
                    authors={article.users.map((users) => users.users)}
                    category={undefined}
                    categoryColor={"#FFF"}
                    categoryLink={undefined}
                    imageUrl={article.imageUrl}
                    articleUrl={`${
                      import.meta.env.BASE_URL
                    }articles/${dateFormatter
                      .format(article.articles_published || new Date(0)) // split -> reverse -> join = DD/MM/YYYY -> YYYY/MM/DD
                      .split("/")
                      .reverse()
                      .join("/")}/${article.articles_slug}`}
                    isVertical={true}
                    isPortrait={article.articles_isThumbnailPortrait}
                    hideCategoryAccent={true}
                    textColour={"#FFF"}
                  />
                </div>
              </div>
            ))}
          </div>

          {/* Mobile */}
          <div
            class={`${
              i === 0 ? "my-4 h-min w-full opacity-100" : "h-0 w-0 opacity-0"
            } flex flex-col px-4 transition-opacity delay-100 duration-500 md:hidden 2xl:px-[13%]`}
            id={`muse_mobile_${category.categories_name}`}
          >
            {articles.get(category.categories_name)?.map((article, i) => (
              <div class="flex w-full flex-col">
                {i !== 0 && (
                  <hr class="my-2.5 w-full self-center border-white" />
                )}
                <Article
                  headline={
                    article.articlesDrafts.length != 0
                      ? article.articlesDrafts[0].articlesDrafts_headline
                      : "Unknown"
                  }
                  excerpt={
                    article.articlesDrafts.length != 0
                      ? article.articlesDrafts[0].articlesDrafts_excerpt
                      : "Unknown"
                  }
                  authors={article.users.map((users) => users.users)}
                  category={undefined}
                  categoryColor={"#FFF"}
                  categoryLink={undefined}
                  imageUrl={article.imageUrl}
                  articleUrl={`${
                    import.meta.env.BASE_URL
                  }articles/${dateFormatter
                    .format(article.articles_published || new Date(0)) // split -> reverse -> join = DD/MM/YYYY -> YYYY/MM/DD
                    .split("/")
                    .reverse()
                    .join("/")}/${article.articles_slug}`}
                  isVertical={false}
                  isPortrait={article.articles_isThumbnailPortrait}
                  hideCategoryAccent={true}
                  textColour={"#FFF"}
                />
              </div>
            ))}
          </div>
        </>
      ))
    }
  </MuseComponent>
</div>
