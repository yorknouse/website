---
import type { categories } from "@prisma/client";
import prisma from "../prisma";
import { Icon } from "astro-icon";

interface Props {
  active: string;
  style: "muse" | "nouse";
}

const { active = "home", style = "nouse" } = Astro.props;

const baseUrl =
  style === "nouse"
    ? import.meta.env.BASE_URL
    : `${import.meta.env.BASE_URL}muse`;

let menuCategories: categories[] = await prisma.categories.findMany({
  where: {
    categories_showMenu: true,
    categories_nestUnder: null,
  },
});

// Add home as first item - possibly need to adjust values in the future
if (style === "nouse") {
  menuCategories.unshift({
    categories_name: "home",
    categories_id: 0,
    categories_showHome: true,
    categories_displayName: "Home",
    categories_showMenu: true,
    categories_showPublic: true,
    categories_showAdmin: true,
    categories_featured: null,
    categories_order: null,
    categories_nestUnder: null,
    categories_showSub: false,
    categories_facebook: null,
    categories_twitter: null,
    categories_instagram: null,
    categories_backgroundColor: null,
    categories_backgroundColorContrast: null,
    categories_customTheme: null,
    categories_socialMediaOverlay: null,
  });

  // Muse to last
  menuCategories = menuCategories.sort((a, b) => {
    if (b.categories_name === "muse") return -1;
    if (a.categories_name === "muse") return 1;

    return 0;
  });
} else {
  // Muse to first
  menuCategories = menuCategories.sort((a, b) => {
    if (b.categories_name === "muse") return 1;
    if (a.categories_name === "muse") return -1;

    return 0;
  });

  // Link to Nouse home
  menuCategories.push({
    categories_name: "nouse",
    categories_id: 0,
    categories_showHome: true,
    categories_displayName: "Nouse",
    categories_showMenu: true,
    categories_showPublic: true,
    categories_showAdmin: true,
    categories_featured: null,
    categories_order: null,
    categories_nestUnder: null,
    categories_showSub: false,
    categories_facebook: null,
    categories_twitter: null,
    categories_instagram: null,
    categories_backgroundColor: null,
    categories_backgroundColorContrast: null,
    categories_customTheme: null,
    categories_socialMediaOverlay: null,
  });
}

// Construct nested items map - saved for later
// let nestedItems = menuCategories.reduce((accumulator, category, _) => {
//   const parent = category.categories_nestUnder;
//   if (parent !== null) {
//     let subCategories = accumulator.get(parent);

//     if (!subCategories) subCategories = [];

//     subCategories.push(category);

//     accumulator.set(parent, subCategories);
//   }
//   return accumulator;
// }, new Map<number, categories[]>());
---

<header
  class={`my-1 flex h-24 w-full ${
    style === "nouse" ? "bg-transparent" : "bg-black"
  }`}
>
  <a href={baseUrl} class="mx-auto self-center">
    {/* This is needed to stretch the svg */}
    <div
      class={`bg-fill ${
        style === "nouse" ? "h-15 w-81 bg-nouse-logo" : "h-17 w-71 bg-muse-logo"
      }`}
    >
    </div>
  </a>
</header>
<nav class="lg:px-30 h-12 w-full bg-black text-lg text-white md:px-10 xl:px-64">
  <ul class="flex h-full w-full flex-row justify-between">
    {
      menuCategories.map((menuItem, index) => (
        <>
          {index !== 0 && ( // No divider before Home
            <span class="h-3/5 self-center border-r-2 border-white" />
          )}
          <li
            class={`group relative flex h-full w-full border-b-4 ${
              active === menuItem.categories_name
                ? "border-white"
                : "border-transparent"
            }`}
          >
            <a
              class="mx-auto my-auto"
              href={
                menuItem.categories_name !== "home"
                  ? `/${menuItem.categories_name}`
                  : baseUrl
              }
            >
              {menuItem.categories_name !== "muse" ? (
                menuItem.categories_displayName
              ) : (
                <img
                  src="https://bbcdn.nouse.co.uk/file/nouseSiteAssets/logo/MUSE%20Logo%20White%20small.png"
                  class="w-16"
                />
              )}
            </a>
          </li>
        </>
      ))
    }
    {/* Search button */}
    <li class="flex h-full w-full border-b-4 border-b-transparent">
      <button class="h-full w-10" id="searchBtn">
        <Icon name="ic:sharp-search" class="py-1 ml-2" />
      </button>
    </li>
  </ul>
</nav>
<script>
  const searchBtn = document.getElementById("searchBtn") as HTMLElement;
  const searchInterface = document.getElementById(
    "searchInterface"
  ) as HTMLElement;

  searchBtn.addEventListener("click", () => {
    searchInterface.classList.remove("invisible", "opacity-0");
  });
</script>
