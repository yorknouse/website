---
import Article from "@components/Article.astro";
import { type IArticleFull } from "./types";

interface Props {
  articles: IArticleFull[];
  articlesPerRow?: number;
  hideCategoryAccent?: boolean;
}

const {
  articles,
  articlesPerRow = 2,
  hideCategoryAccent = false,
} = Astro.props;
---

<div class="hidden max-w-full flex-col md:flex">
  {
    articles
      .reduce(
        (
          accumulator: IArticleFull[][],
          currentValue: any,
          currentIndex: number,
          array: IArticleFull[]
        ) => {
          if (currentIndex % articlesPerRow === 0) {
            accumulator.push(
              array.slice(currentIndex, currentIndex + articlesPerRow)
            );
          }
          return accumulator;
        },
        []
      )
      .map(async (articleRow: IArticleFull[], index: number) => {
        // const categories = articleRow.map((article) =>
        //   parentCategory
        //     ? parentCategory
        //     : getParentCategory(article.categories)
        // );
        return (
          <div>
            <div class="flex max-h-52 max-w-full gap-2.5">
              {articleRow.map(
                async (
                  article: IArticleFull,
                  articleIndex: number
                ) => {
                    return (
                  <div
                    class={`${
                      articlesPerRow == 1 ? "w-full" : `w-1/${articlesPerRow}`
                    } pr-2.5 ${
                      articleIndex < articleRow.length - 1 &&
                      "border-r border-gray-300"
                    }`}
                  >
                    <Article
                      headline={
                          article.headline?.length != 0
                              ? String(article.headline)
                              : "Unknown"
                      }
                      excerpt={
                          article.excerpt?.length != 0
                              ? String(article.excerpt)
                              : "Unknown"
                      }
                      authors={article.authors}
                      category={article.parentCategory.displayName}
                      categoryLink={article.parentCategory.link}
                      categoryColor={article.parentCategory.colour}
                      imageUrl={article.thumbnailURL}
                      articleUrl={article.articleURL}
                      isVertical={false}
                      isPortrait={false}
                      hideCategoryAccent={hideCategoryAccent}
                    />
                  </div>
                )}
              )}
            </div>
            {index !=
              (0 || Math.ceil(articles.length / articlesPerRow) - 1) && (
              <hr class="my-2.5 w-full self-center border-gray-300" />
            )}
          </div>
        );
      })
  }
</div>
<div class="block max-w-full justify-center md:hidden">
  {
    articles.map(async (article, index) => {
      <!--const category = parentCategory-->
      <!--  ? parentCategory-->
      <!--  : getParentCategory(article.categories);-->
      return (
        <div
          class={`w-full p-2.5 ${
            index != articles.length - 1 ? "border-b border-gray-300" : ""
          }`}
        >
          <Article
            headline={
              article.headline?.length != 0
                ? String(article.headline)
                : "Unknown"
            }
            excerpt={
              article.excerpt?.length != 0
                ? String(article.excerpt)
                : "Unknown"
            }
            authors={article.authors}
            category={article.parentCategory.name}
            categoryLink={article.parentCategory.link}
            categoryColor={article.parentCategory.colour}
            imageUrl={article.thumbnailURL}
            articleUrl={article.articleURL}
            isVertical={false}
            isPortrait={article.isThumbnailPortrait}
            hideCategoryAccent={hideCategoryAccent}
          />
        </div>
      );
    })
  }
</div>
