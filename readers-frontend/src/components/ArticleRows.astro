---
import type { categories } from "@prisma/client";
import {
  articlesWithArticleDrafts,
  getArticleImage,
} from "@components/utils/articles";
import Article from "@components/Article.astro";

interface Props {
  articles: articlesWithArticleDrafts[];
  style: string;
  articlesPerRow?: number;
  parentCategory?: categories;
  hideCategoryAccent?: boolean;
}

const { articles, style, articlesPerRow = 2, parentCategory, hideCategoryAccent = false } = Astro.props;

export const getArticleCategory = (article: articlesWithArticleDrafts, style: string) => {
  let mainCategories = article.categories.filter(
        ({ category }) =>
          category.categories_nestUnder === (style === "muse" ? 4 : null) &&
          category.categories_showPublic
      );
  if (mainCategories.length === 0) {
    return article.categories[0].category;
  }
  return mainCategories[0].category;
}
---

<div class="hidden max-w-full flex-col sm:flex">
  {
    articles
      .reduce(
        (
          accumulator: articlesWithArticleDrafts[][],
          currentValue: any,
          currentIndex: number,
          array: articlesWithArticleDrafts[]
        ) => {
          if (currentIndex % articlesPerRow === 0) {
            accumulator.push(
              array.slice(currentIndex, currentIndex + articlesPerRow)
            );
          }
          return accumulator;
        },
        []
      )
      .map(async (articleRow: articlesWithArticleDrafts[], index: number) => {
        const categories = articleRow.map((article) => parentCategory ? parentCategory :  getArticleCategory(article, style));
        return (
          <div>
            <div class="flex max-h-52 max-w-full gap-2.5">
              {articleRow.map(
                async (
                  article: articlesWithArticleDrafts,
                  articleIndex: number
                ) => (
                  <div
                    class={`${articlesPerRow == 1 ? "w-full" : `w-1/${articlesPerRow}`} pr-2.5 ${
                      articleIndex < articleRow.length - 1 &&
                      "border-r-2 border-gray-300"
                    }`}
                  >
                    <Article
                      headline={
                        article.articlesDrafts[0].articlesDrafts_headline
                      }
                      excerpt={article.articlesDrafts[0].articlesDrafts_excerpt}
                      author={
                        article.articlesDrafts[0].users?.users_name1 +
                        " " +
                        article.articlesDrafts[0].users?.users_name2
                      }
                      authorId={article.articlesDrafts[0].users?.users_userid}
                      category={categories[articleIndex].categories_displayName}
                      categoryLink={categories[articleIndex].categories_name}
                      categoryColor={
                        categories[articleIndex].categories_backgroundColor
                      }
                      imageUrl={await getArticleImage(article)}
                      articleUrl={`/${article.articles_published
                        ?.toISOString()
                        .substring(0, 10)
                        .replaceAll("-", "/")}/${article.articles_slug}`}
                      isVertical={false}
                      isPortrait={false}
                      hideCategoryAccent={hideCategoryAccent}
                    />
                  </div>
                )
              )}
            </div>
            {index !=
              (0 || Math.ceil(articles.length / articlesPerRow) - 1) && (
              <hr class="my-2.5 w-full self-center border-[1px] border-gray-300" />
            )}
          </div>
        );
      })
  }
</div>
<div class="block max-w-full justify-center sm:hidden">
  {articles.map(
    async (article: articlesWithArticleDrafts, index: number) => {
      const category = parentCategory ? parentCategory : getArticleCategory(article, style);
      return (
        <div
          class={`w-full p-2.5 ${
            index != articles.length - 1
              ? "border-b-2 border-gray-300"
              : ""
          }`}
        >
          <Article
            headline={
              article.articlesDrafts[0].articlesDrafts_headline
            }
            excerpt={
              article.articlesDrafts[0].articlesDrafts_excerpt
            }
            author={
              article.articlesDrafts[0].users?.users_name1 +
              " " +
              article.articlesDrafts[0].users?.users_name2
            }
            authorId={
              article.articlesDrafts[0].users?.users_userid
            }
            category={category.categories_displayName}
            categoryLink={category.categories_name}
            categoryColor={category.categories_backgroundColor}
            imageUrl={await getArticleImage(article)}
            articleUrl={`/${article.articles_published
              ?.toISOString()
              .substring(0, 10)
              .replaceAll("-", "/")}/${article.articles_slug}`}
            isVertical={false}
            isPortrait={article.articles_isThumbnailPortrait}
            hideCategoryAccent={hideCategoryAccent}
          />
        </div>
      );
    }
  )}
</div>
