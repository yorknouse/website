---
import { Icon } from "astro-icon/components";
import type { ICategory } from "./types";

interface Props {
  active: string | undefined;
  style: "muse" | "nouse";
  menuCategories: ICategory[];
  subMenuCategories: Map<string, ICategory[]>;
  baseUrl: string;
}

const { active, style, menuCategories, subMenuCategories, baseUrl }: Props = Astro.props;

const formData = new FormData();
formData.append("active", active!);
formData.append("menuCategories", JSON.stringify(menuCategories));
formData.append("subMenuCategories", JSON.stringify([...subMenuCategories.entries()]));

const apiBase = import.meta.env.PUBLIC_API_BASE_URL;

const res = await fetch(`${apiBase}/api/frontend/desktopNavBar`, {
  method: "POST",
  body: formData,
});

const {
  subMenuItems,
  parentCategory,
  computedBaseColour
} = await res.json();
---

<header
  id="desktopHeader"
  class={`hidden md:flex md:flex-row w-full ${
    style === "nouse" ? "bg-transparent" : "bg-black"
  }`}
>
  <a href={baseUrl} class="mx-auto self-center">
    <img
      class="my-4 h-14"
      src={style === "nouse"
        ? "https://bbcdn.nouse.co.uk/file/nouseSiteAssets/logo/nouse-logo-print.svg"
        : "https://bbcdn.nouse.co.uk/file/nouseSiteAssets/logo/MUSE%20Logo%20White%20small.png"}
     alt="Header logo"/>
  </a>
</header>
<nav
  id="desktopNav"
  class={`hidden ${
    subMenuItems ? "h-24" : "h-12"
  } w-full text-xs md:block lg:text-sm sticky top-0 z-40 bg-navbar`}
>
  <ul
    class={`flex ${
      subMenuItems ? "h-1/2" : "h-full"
    } w-full flex-row justify-between border-transparent 2xl:px-[13%] text-white transition-colors ease-in-out duration-500`}
  >
    {
      menuCategories.map((menuItem, index) => (
        <>
          <!--{index !== 0 && ( // No divider before Home
            <span class="h-3/5 self-center border-r border-white" />
          )}-->
          <li
            class={`group relative flex h-full w-full border-b-4 ${
              active === menuItem.categories_name ||
              parentCategory?.categories_name === menuItem.categories_name
                ? "border-white bg-navbar-item"
                : "border-transparent"
            } ${parentCategory?.categories_name}`}
            onmouseover=`this.style.backgroundColor = '${menuItem.categories_backgroundColor != null ? menuItem.categories_backgroundColor : "#000"}'`
            onmouseout="this.style.backgroundColor = 'transparent'"
          >
            <a
              class="mx-auto my-auto text-center"
              href={
                menuItem.categories_displayName === "Home"
                  ? baseUrl
                  : menuItem.categories_displayName === "Nouse"
                  ? import.meta.env.BASE_URL
                  : `${baseUrl + menuItem.categories_name}`
              }
            >
              {() => {
                switch (menuItem.categories_displayName) {
                  case "Muse":
                    return (
                      <img
                        src="https://bbcdn.nouse.co.uk/file/nouseSiteAssets/logo/MUSE%20Logo%20White%20small.png"
                        class="w-16"
                        alt="MUSE site logo"
                      />
                    );
                  case "Nouse":
                    return (
                      <img
                        src="https://bbcdn.nouse.co.uk/file/nouseSiteAssets/logo/kingfisher.svg"
                        class="w-10 invert"
                       alt="Nouse Kingfisher logo"/>
                    );
                  default:
                    return menuItem.categories_displayName;
                }
              }}
            </a>
          </li>
        </>
      ))
    }
    <!--<span class="h-3/5 self-center border-r border-white"></span>-->
    {/* Search button */}
    <li class="flex h-full w-full border-b-4 border-b-transparent">
      <button class="searchBtnClassIdentifier mx-auto h-full w-10">
        <Icon name="ic:sharp-search" class="py-1 ml-2" />
      </button>
    </li>
  </ul>
  {
    subMenuItems && (
      <ul class="bg-navbar flex h-1/2 w-full flex-row text-white brightness-90 2xl:px-[13%]">
        {subMenuItems?.map((menuItem: ICategory, index: number) => (
          <>
            <!--{index !== 0 && ( // No divider before Home
              <span class="h-3/5 self-center border-r border-white" />
            )}-->
            <li
              class={`group relative flex h-full border-b-4 px-[3%] ${
                active === menuItem.categories_name
                  ? "border-white"
                  : "border-transparent"
              }`}
              onmouseover="this.classList.add('brightness-80')"
              onmouseout="this.classList.remove('brightness-80')"
            >
              <a
                class="mx-auto my-auto"
                href={`${
                  baseUrl +
                  (parentCategory ? parentCategory.categories_name : active)
                }/${menuItem.categories_name}`}
              >
                {menuItem.categories_displayName}
              </a>
            </li>
          </>
        ))}
      </ul>
    )
  }
</nav>
<style define:vars={{ computedBaseColour }}>
  .bg-navbar {
    background-color: var(--computedBaseColour);
  }
</style>
